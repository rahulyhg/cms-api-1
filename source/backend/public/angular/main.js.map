{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin-route.module.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/admin.component.html","webpack:///./src/app/components/admin.component.ts","webpack:///./src/app/pages/dashboard/dashboard.component.css","webpack:///./src/app/pages/dashboard/dashboard.component.html","webpack:///./src/app/pages/dashboard/dashboard.component.ts","webpack:///./src/app/pages/login/login.component.html","webpack:///./src/app/pages/login/login.component.ts","webpack:///./src/app/pages/page-not-found/page-not-found.component.css","webpack:///./src/app/pages/page-not-found/page-not-found.component.html","webpack:///./src/app/pages/page-not-found/page-not-found.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","///<reference path=\"../../node_modules/@angular/flex-layout/typings/module.d.ts\"/>\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { LoginComponent } from './pages/login/login.component';\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\nimport { PageNotFoundComponent } from './pages/page-not-found/page-not-found.component';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\n\nconst appRoutes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'dashboard', component: DashboardComponent },\n  { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n  { path: '**', component: PageNotFoundComponent },\n];\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    DashboardComponent,\n    PageNotFoundComponent,\n  ],\n  imports: [\n    RouterModule.forRoot(appRoutes),\n    FlexLayoutModule,\n  ],\n  exports: [\n    RouterModule\n  ],\n})\nexport class AdminRoutesModule {\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { AdminRoutesModule } from './admin-route.module';\n\nimport { AdminComponent } from './components/admin.component';\n\n@NgModule({\n  declarations: [\n    AdminComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AdminRoutesModule,\n    FlexLayoutModule,\n  ],\n  providers: [],\n  bootstrap: [ AdminComponent ]\n})\nexport class AdminModule {\n}\n","module.exports = \"{{name}}\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './admin.component.html'\n})\nexport class AdminComponent {\n  title = 'NariCMS';\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  dashboard works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"login\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n    <div class=\\\"panel\\\">\\n        <h1>NariCMS</h1>\\n        <div class=\\\"form\\\">\\n            <h3>Sign in to get in touch</h3>\\n            <div class=\\\"field-holder\\\">\\n                <input type=\\\"email\\\" placeholder=\\\"Email\\\" class=\\\"field email\\\" required>\\n                <input type=\\\"password\\\" placeholder=\\\"Password\\\" class=\\\"field password\\\" required>\\n            </div>\\n\\n            <button class=\\\"btn purple lg\\\">Log in</button>\\n\\n            <div class=\\\"forgot-password\\\"><a href=\\\"forgot-password\\\">Forgot password?</a></div>\\n\\n            <p><small>Do not have an account?</small></p>\\n            <a ui-sref=\\\"access.signup\\\" class=\\\"btn default lg block\\\">Create an account</a>\\n        </div>\\n        <div class=\\\"footer\\\">\\n            <p>\\n                <small class=\\\"text muted\\\">NariCMS is powered by Angular6 and Zend Framework<br>&copy; 2014\\n                </small>\\n            </p>\\n        </div>\\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  page-not-found works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { environment } from './environments/environment';\nimport { AdminModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AdminModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}