#!/usr/bin/env bash

function uppercase() {
    echo `echo $1 | tr [a-z] [A-Z]`
}

function lower() {
    echo `echo $1 | tr [A-Z] [a-z]`
}

function ufirst() {
    first=`echo $1 | cut -c1 | tr [a-z] [A-Z]`
    second=`echo $1 | cut -c2-`
    echo $first$second
}

if [ $# -gt 0 ]; then

    if [ "$1" == "start" ]; then
        docker-compose up

    elif [ "$1" == "stop" ]; then
        docker-compose down

    elif [ "$1" == "php" ]; then
        shift 1
        docker-compose exec web php "$@"

    elif [ "$1" == "composer" ] || [ "$1" == "comp" ]; then
        shift 1
        docker-compose exec web composer "$@"

    elif [ "$1" == "unit_test" ]; then
        shift 1
        docker-compose exec web ./vendor/bin/phpunit "$@"

    elif [ "$1" == "npm" ]; then
        shift 1
        docker-compose run --rm node npm "$@"

    elif [ "$1" == "yarn" ]; then
        shift 1
        docker-compose run --rm node yarn "$@"

    elif [ "$1" == "grunt" ]; then
        shift 1
        docker-compose run --rm node grunt "$@"

    elif [ "$1" == "doctrine-module" ]; then
        if [ $# == 1 ]; then
            docker-compose exec web ./vendor/bin/doctrine-module list
        else
            shift 1
            docker-compose exec web ./vendor/bin/doctrine-module "$@"
        fi

    elif [ "$1" == "doctrine" ]; then
        docker-compose exec web ./vendor/bin/doctrine-module orm:convert:mapping \
                    --namespace="`ufirst $2`\\Entity\\" --force \
                    --from-database annotation ./module/`ufirst $2`/src/

    elif [ "$1" == "zf" ]; then
        if [ "$2" == "module" ]; then
            docker-compose exec web php ./zend/zf-module-creator.php create $3

        else
            docker-compose exec web composer create-project -sdev zendframework/skeleton-application .
        fi

    else
        docker-compose "$@"
    fi

#    docker images
#    docker ps -a
#    docker build -t nari/wep -f ./docker/app/Dockerfile .
#    docker build -t nari/node -f ./docker/node/Dockerfile .
else
    docker-compose ps
fi
